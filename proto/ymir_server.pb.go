// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ymir_server.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BotRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BotRequest) Reset()         { *m = BotRequest{} }
func (m *BotRequest) String() string { return proto.CompactTextString(m) }
func (*BotRequest) ProtoMessage()    {}
func (*BotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ymir_server_3f54df28e736c679, []int{0}
}
func (m *BotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotRequest.Unmarshal(m, b)
}
func (m *BotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotRequest.Marshal(b, m, deterministic)
}
func (dst *BotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotRequest.Merge(dst, src)
}
func (m *BotRequest) XXX_Size() int {
	return xxx_messageInfo_BotRequest.Size(m)
}
func (m *BotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BotRequest proto.InternalMessageInfo

func (m *BotRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BotRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type BotResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BotResponse) Reset()         { *m = BotResponse{} }
func (m *BotResponse) String() string { return proto.CompactTextString(m) }
func (*BotResponse) ProtoMessage()    {}
func (*BotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ymir_server_3f54df28e736c679, []int{1}
}
func (m *BotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotResponse.Unmarshal(m, b)
}
func (m *BotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotResponse.Marshal(b, m, deterministic)
}
func (dst *BotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotResponse.Merge(dst, src)
}
func (m *BotResponse) XXX_Size() int {
	return xxx_messageInfo_BotResponse.Size(m)
}
func (m *BotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BotResponse proto.InternalMessageInfo

func (m *BotResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BotResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*BotRequest)(nil), "proto.BotRequest")
	proto.RegisterType((*BotResponse)(nil), "proto.BotResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BotClient is the client API for Bot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BotClient interface {
	GetResponse(ctx context.Context, in *BotRequest, opts ...grpc.CallOption) (*BotResponse, error)
}

type botClient struct {
	cc *grpc.ClientConn
}

func NewBotClient(cc *grpc.ClientConn) BotClient {
	return &botClient{cc}
}

func (c *botClient) GetResponse(ctx context.Context, in *BotRequest, opts ...grpc.CallOption) (*BotResponse, error) {
	out := new(BotResponse)
	err := c.cc.Invoke(ctx, "/proto.Bot/GetResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BotServer is the server API for Bot service.
type BotServer interface {
	GetResponse(context.Context, *BotRequest) (*BotResponse, error)
}

func RegisterBotServer(s *grpc.Server, srv BotServer) {
	s.RegisterService(&_Bot_serviceDesc, srv)
}

func _Bot_GetResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BotServer).GetResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bot/GetResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BotServer).GetResponse(ctx, req.(*BotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Bot",
	HandlerType: (*BotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResponse",
			Handler:    _Bot_GetResponse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ymir_server.proto",
}

func init() { proto.RegisterFile("ymir_server.proto", fileDescriptor_ymir_server_3f54df28e736c679) }

var fileDescriptor_ymir_server_3f54df28e736c679 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xac, 0xcc, 0xcd, 0x2c,
	0x8a, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05,
	0x53, 0x4a, 0x06, 0x5c, 0x5c, 0x4e, 0xf9, 0x25, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42,
	0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x4c, 0x99, 0x29, 0x42,
	0x42, 0x5c, 0x2c, 0x25, 0xa9, 0x15, 0x25, 0x12, 0x4c, 0x60, 0x11, 0x30, 0x5b, 0xc9, 0x90, 0x8b,
	0x1b, 0xac, 0xa3, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x95, 0x18, 0x2d, 0x46, 0xb6, 0x5c, 0xcc, 0x4e,
	0xf9, 0x25, 0x42, 0x66, 0x5c, 0xdc, 0xee, 0xa9, 0x08, 0x9d, 0x82, 0x10, 0x97, 0xe8, 0x21, 0xec,
	0x97, 0x12, 0x42, 0x16, 0x82, 0x28, 0x53, 0x62, 0x48, 0x62, 0x03, 0x0b, 0x1a, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xb0, 0x5f, 0x59, 0x09, 0xc6, 0x00, 0x00, 0x00,
}
